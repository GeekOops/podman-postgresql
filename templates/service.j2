[Unit]
Description=postgresql podman container
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers
StartLimitBurst=2
StartLimitIntervalSec=120

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
RestartSec=30
TimeoutStopSec=70
ExecStartPre=/bin/rm -f %t/%n.ctr-id
ExecStartPre=/usr/bin/podman pull {{ pg_container_image }}
ExecStart=/usr/bin/podman run -d \
	--cidfile=%t/%n.ctr-id \
	--cgroups=no-conmon \
	--rm \
	--sdnotify=conmon \
	--replace \
	--name {{ pg_container_name }} \
{% if pg_mem_limit != "" %}
	--memory {{ pg_mem_limit }} \
{% endif %}
{% if pg_container_network != "" %}
	--network={{pg_container_network}} \
{% endif %}
{% if pg_container_ip != "" %}
	--ip={{ pg_container_ip }} \
{% endif %}
{% if pg_auto_update == true %}
	--label io.containers.autoupdate=image \
{% endif %}
	--read-only --tmpfs=/run --tmpfs=/tmp \
	-e POSTGRES_HOST_AUTH_METHOD={{ pg_auth_method }} \
{% if pg_default_user != "" %}
	-e POSTGRES_USER={{pg_default_user}} \
{% endif %}
{% if pg_default_password != "" %}
	-e POSTGRES_PASSWORD={{ pg_default_password }} \
{% endif %}
	-v {{ pg_data_dir }}/data:/var/lib/postgresql/data:Z \
	-v {{ pg_data_dir }}/.psql_history:/var/lib/postgresql/.psql_history:Z \
	{{pg_container_image}}
ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target
